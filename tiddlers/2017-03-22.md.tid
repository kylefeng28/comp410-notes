created: 20170322131324486
creator: kylefeng
modified: 20170322131846132
modifier: kylefeng
tags: notes
title: 2017-03-22
type: text/x-markdown

```java
public void remove(K k) { root = remove(k, root); }
private AVLTree<K, D> remove(K k, AVLTree t) {
	...
    rebalance(t);
    return t;
}
```

Unlike insert, remove may have to rebalance multiple times. This does not change the runtime complexity, because rebalancing is constant time, and you rebalance at $\log n$ levels. The time it takes is longer, but the runtime is still $O(\log n)$.

Lazy deletion. Only indicate that the node is deleted, but do not actually remove it until later.


